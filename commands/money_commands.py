import datetime
import discord
from discord import app_commands
import json
from data_config import ROLE_ODMENY
from utils import get_or_create_user, is_admin, get_total_money, hraci

async def setup_money_commands(tree, bot):

    # --- BALANCE ---
    @tree.command(name="balance", description="Zobraz√≠ finanƒçn√≠ stav")
    @app_commands.describe(uzivatel="(Voliteln√©) U≈æivatel, jeho≈æ stav chce≈° zobrazit")
    async def balance(interaction: discord.Interaction, uzivatel: discord.Member = None):
        uzivatel = uzivatel or interaction.user
        data = get_or_create_user(uzivatel.id)

        penize = data.get("penize", 0)
        hotovost = data.get("hotovost", 0)
        bank = data.get("bank", 0)

        embed = discord.Embed(
            title=f"üí∞ Finanƒçn√≠ p≈ôehled pro {uzivatel.display_name}",
            color=discord.Color.gold()
        )
        embed.add_field(name="üíµ Celkem", value=f"{penize:,} $", inline=False)
        embed.add_field(name="üí≥ Hotovost", value=f"{hotovost:,} $", inline=True)
        embed.add_field(name="üè¶ Banka", value=f"{bank:,} $", inline=True)

        await interaction.response.send_message(embed=embed)

    # --- PRIDEJ PENIZE ---
    @tree.command(name="pridej-penize", description="P≈ôid√° pen√≠ze hr√°ƒçi (admin)")
    @app_commands.describe(uzivatel="U≈æivatel, kter√©mu chce≈° p≈ôidat pen√≠ze", castka="Kolik penƒõz chce≈° p≈ôidat")
    async def pridej_penize(interaction: discord.Interaction, uzivatel: discord.Member, castka: int):
            if not is_admin(interaction.user):
                await interaction.response.send_message("‚ùå Nem√°≈° opr√°vnƒõn√≠ pou≈æ√≠t tento p≈ô√≠kaz.", ephemeral=True)
                return

            data = get_or_create_user(uzivatel.id)
            data["hotovost"] += castka
            data["penize"] = data["hotovost"] + data["bank"]

            # aktualizace MongoDB
            hraci.update_one(
                {"user_id": str(uzivatel.id)},
                {"$set": {"hotovost": data["hotovost"], "bank": data["bank"], "penize": data["penize"]}}
            )

            await interaction.response.send_message(f"‚úÖ P≈ôid√°no {castka}$ hr√°ƒçi {uzivatel.display_name}.")


    # --- ODEBER PENIZE ---
    @tree.command(name="odeber-penize", description="Odebere pen√≠ze hr√°ƒçi (admin)")
    @app_commands.describe(uzivatel="U≈æivatel, kter√©mu chce≈° odebrat pen√≠ze", castka="Kolik penƒõz chce≈° odebrat (nebo 'all' pro v≈°echny)")
    async def odeber_penize(interaction: discord.Interaction, uzivatel: discord.Member, castka: str):
        if not is_admin(interaction.user):
            await interaction.response.send_message("‚ùå Nem√°≈° opr√°vnƒõn√≠ pou≈æ√≠t tento p≈ô√≠kaz.", ephemeral=True)
            return

        data = get_or_create_user(uzivatel.id)

        if castka.lower() == "all":
            actual_castka = data["hotovost"] + data["bank"]
            data["hotovost"] = 0
            data["bank"] = 0
        else:
            try:
                actual_castka = int(castka)
                if actual_castka <= 0:
                    await interaction.response.send_message("‚ùå ƒå√°stka mus√≠ b√Ωt vƒõt≈°√≠ ne≈æ 0.", ephemeral=True)
                    return
            except ValueError:
                await interaction.response.send_message("‚ùå Neplatn√° ƒç√°stka. Pou≈æij ƒç√≠slo nebo 'all'.", ephemeral=True)
                return

            if data["hotovost"] >= actual_castka:
                data["hotovost"] -= actual_castka
            else:
                remaining = actual_castka - data["hotovost"]
                data["hotovost"] = 0
                data["bank"] -= remaining
                if data["bank"] < 0:
                    data["bank"] = 0

        data["penize"] = data["hotovost"] + data["bank"]
        # Update in MongoDB
        hraci.update_one(
            {"user_id": str(uzivatel.id)},
            {"$set": {
                "hotovost": data["hotovost"],
                "bank": data["bank"],
                "penize": data["penize"]
            }}
        )
        await interaction.response.send_message(f"‚úÖ Odebr√°no {actual_castka}$ hr√°ƒçi {uzivatel.display_name}.")


    # --- RESET PENIZE ---
    @tree.command(name="reset-penize", description="Resetuje pen√≠ze hr√°ƒçe (admin)")
    @app_commands.describe(uzivatel="U≈æivatel, jeho≈æ pen√≠ze chce≈° vynulovat")
    async def reset_penize(interaction: discord.Interaction, uzivatel: discord.Member):
        if not is_admin(interaction.user):
            await interaction.response.send_message("‚ùå Nem√°≈° opr√°vnƒõn√≠ pou≈æ√≠t tento p≈ô√≠kaz.", ephemeral=True)
            return

        data = get_or_create_user(uzivatel.id)

        # aktualizace v MongoDB
        hraci.update_one(
            {"user_id": str(uzivatel.id)},
            {"$set": {"hotovost": 0, "bank": 0, "penize": 0}}
        )

        await interaction.response.send_message(f"‚ôªÔ∏è Pen√≠ze hr√°ƒçe {uzivatel.display_name} byly vynulov√°ny.")


    # --- PAY ---
    @tree.command(name="pay", description="Po≈°le pen√≠ze jin√©mu hr√°ƒçi")
    @app_commands.describe(cil="Komu chce≈° poslat pen√≠ze", castka="Kolik penƒõz chce≈° poslat")
    async def posli_penize(interaction: discord.Interaction, cil: discord.Member, castka: int):
        if castka <= 0:
            await interaction.response.send_message("‚ùå ƒå√°stka mus√≠ b√Ωt vƒõt≈°√≠ ne≈æ 0.", ephemeral=True)
            return

        odesilatel_data = get_or_create_user(interaction.user.id)
        prijemce_data = get_or_create_user(cil.id)

        if get_total_money(odesilatel_data) < castka:
            await interaction.response.send_message("‚ùå Nem√°≈° dostatek penƒõz.", ephemeral=True)
            return

        remaining_to_remove = castka
        if odesilatel_data["hotovost"] >= remaining_to_remove:
            odesilatel_data["hotovost"] -= remaining_to_remove
        else:
            remaining_to_remove -= odesilatel_data["hotovost"]
            odesilatel_data["hotovost"] = 0
            odesilatel_data["bank"] -= remaining_to_remove

        prijemce_data["hotovost"] += castka

        odesilatel_data["penize"] = odesilatel_data["hotovost"] + odesilatel_data["bank"]
        prijemce_data["penize"] = prijemce_data["hotovost"] + prijemce_data["bank"]

        # Update in MongoDB for sender
        hraci.update_one(
            {"user_id": str(interaction.user.id)},
            {"$set": {
                "hotovost": odesilatel_data["hotovost"],
                "bank": odesilatel_data["bank"],
                "penize": odesilatel_data["penize"]
            }}
        )
        # Update in MongoDB for receiver
        hraci.update_one(
            {"user_id": str(cil.id)},
            {"$set": {
                "hotovost": prijemce_data["hotovost"],
                "bank": prijemce_data["bank"],
                "penize": prijemce_data["penize"]
            }}
        )

        await interaction.response.send_message(f"üí∏ Poslal jsi {castka}$ hr√°ƒçi {cil.display_name}.")
    # --- VYBRAT ---
    @tree.command(name="vybrat", description="Vybere pen√≠ze z banky do penƒõ≈æenky")
    @app_commands.describe(castka="ƒå√°stka, kterou chce≈° vybrat (nebo 'all' pro v≈°echny)")
    async def vybrat(interaction: discord.Interaction, castka: str):
        data = get_or_create_user(interaction.user.id)
        if castka.lower() == "all":
            actual_castka = data.get("bank", 0)
            if actual_castka <= 0:
                await interaction.response.send_message("‚ùå Nem√°≈° ≈æ√°dn√© pen√≠ze v bance.", ephemeral=True)
                return
            data["bank"] = 0
            data["hotovost"] += actual_castka
        else:
            try:
                actual_castka = int(castka)
                if actual_castka <= 0:
                    await interaction.response.send_message("‚ùå ƒå√°stka mus√≠ b√Ωt vƒõt≈°√≠ ne≈æ 0.", ephemeral=True)
                    return
            except ValueError:
                await interaction.response.send_message("‚ùå Neplatn√° ƒç√°stka. Pou≈æij ƒç√≠slo nebo 'all'.", ephemeral=True)
                return
            if data.get("bank", 0) < actual_castka:
                await interaction.response.send_message("‚ùå Nem√°≈° dostatek penƒõz v bance.", ephemeral=True)
                return
            data["bank"] -= actual_castka
            data["hotovost"] += actual_castka
        data["penize"] = data["hotovost"] + data["bank"]
        # Update in MongoDB
        hraci.update_one(
            {"user_id": str(interaction.user.id)},
            {"$set": {
                "bank": data["bank"],
                "hotovost": data["hotovost"],
                "penize": data["penize"]
            }}
        )
        await interaction.response.send_message(f"‚úÖ Vybral jsi {actual_castka:,} $ z banky do penƒõ≈æenky.")

    # --- VLOZIT ---
    @tree.command(name="vlozit", description="Vlo≈æ√≠ pen√≠ze z penƒõ≈æenky do banky")
    @app_commands.describe(castka="ƒå√°stka, kterou chce≈° vlo≈æit (nebo 'all' pro v≈°echny)")
    async def vlozit(interaction: discord.Interaction, castka: str):
        data = get_or_create_user(interaction.user.id)
        if castka.lower() == "all":
            actual_castka = data.get("hotovost", 0)
            if actual_castka <= 0:
                await interaction.response.send_message("‚ùå Nem√°≈° ≈æ√°dn√© pen√≠ze v penƒõ≈æence.", ephemeral=True)
                return
            data["hotovost"] = 0
            data["bank"] += actual_castka
        else:
            try:
                actual_castka = int(castka)
                if actual_castka <= 0:
                    await interaction.response.send_message("‚ùå ƒå√°stka mus√≠ b√Ωt vƒõt≈°√≠ ne≈æ 0.", ephemeral=True)
                    return
            except ValueError:
                await interaction.response.send_message("‚ùå Neplatn√° ƒç√°stka. Pou≈æij ƒç√≠slo nebo 'all'.", ephemeral=True)
                return
            if data.get("hotovost", 0) < actual_castka:
                await interaction.response.send_message("‚ùå Nem√°≈° dostatek penƒõz v penƒõ≈æence.", ephemeral=True)
                return
            data["hotovost"] -= actual_castka
            data["bank"] += actual_castka
        data["penize"] = data["hotovost"] + data["bank"]
        # Update in MongoDB
        hraci.update_one(
            {"user_id": str(interaction.user.id)},
            {"$set": {
                "hotovost": data["hotovost"],
                "bank": data["bank"],
                "penize": data["penize"]
            }}
        )
        await interaction.response.send_message(f"‚úÖ Vlo≈æil jsi {actual_castka:,} $ z penƒõ≈æenky do banky.")

    # --- COLLECT ---
    @tree.command(name="collect", description="Vybere≈° si t√Ωdenn√≠ v√Ωplatu podle sv√Ωch rol√≠ (ka≈æd√° m√° vlastn√≠ cooldown).")
    async def collect(interaction: discord.Interaction):
        now = datetime.datetime.utcnow()
        data = get_or_create_user(interaction.user.id)
        if "collect_timestamps" not in data:
            data["collect_timestamps"] = {}
        user_role_ids = [role.id for role in interaction.user.roles]
        vyplaceno = 0
        vyplacene_role = []
        cekajici_role = []
        for role_id, castka in ROLE_ODMENY.items():
            if role_id not in user_role_ids:
                continue
            posledni = data["collect_timestamps"].get(str(role_id))
            if posledni:
                posledni_cas = datetime.datetime.fromisoformat(posledni)
                rozdil = now - posledni_cas
                if rozdil < datetime.timedelta(days=7):
                    zb√Ωv√° = datetime.timedelta(days=7) - rozdil
                    hodiny, zbytek = divmod(zb√Ωv√°.total_seconds(), 3600)
                    minuty = int((zbytek % 3600) // 60)
                    cekajici_role.append((role_id, hodiny, minuty))
                    continue
            vyplaceno += castka
            vyplacene_role.append((role_id, castka))
            data["collect_timestamps"][str(role_id)] = now.isoformat()
        data["hotovost"] = data.get("hotovost", 0) + vyplaceno
        # Update in MongoDB
        hraci.update_one(
            {"user_id": str(interaction.user.id)},
            {"$set": {
                "hotovost": data["hotovost"],
                "penize": data["hotovost"] + data["bank"],
                f"collect_timestamps.{role_id}": now.isoformat()
            }}
        )
        embed = discord.Embed(
            title="üí∞ T√Ωdenn√≠ v√Ωplata",
            color=discord.Color.green()
        )
        if vyplacene_role:
            popis = ""
            for role_id, castka in vyplacene_role:
                role_obj = discord.utils.get(interaction.guild.roles, id=role_id)
                nazev = role_obj.name if role_obj else f"Role ID {role_id}"
                popis += f"‚úÖ **{nazev}**: +{castka:,} $\n"
            embed.add_field(name="üí∏ Vyplaceno", value=popis, inline=False)
        if cekajici_role:
            cekani = ""
            for role_id, h, m in cekajici_role:
                role_obj = discord.utils.get(interaction.guild.roles, id=role_id)
                nazev = role_obj.name if role_obj else f"Role ID {role_id}"
                cekani += f"‚è≥ **{nazev}** ‚Äì za {int(h)}h {int(m)}m\n"
            embed.add_field(name="üïí Nelze vybrat (je≈°tƒõ cooldown)", value=cekani, inline=False)
        if not vyplacene_role:
            embed.description = "‚ùå Tento t√Ωden u≈æ sis vybral odmƒõnu za v≈°echny sv√© role."
        await interaction.response.send_message(embed=embed, ephemeral=True)